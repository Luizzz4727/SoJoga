{"version":3,"sources":["TableHead.tsx"],"names":["React","StyleSheet","View","Text","THEME","TableHead","titleTextStyle","itemStyle","dataTitleHead","dataSpacing","styles","container","length","map","itemWidth","idx","width","color","WHITE_COLOR","create","flexDirection"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,UADF,EAEEC,IAFF,EAGEC,IAHF,QAOO,cAPP;AAQA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;;AASA,MAAMC,SAAuC,GAAG,QAMtB;AAAA,MANuB;AAC/CC,IAAAA,cAAc,GAAG,EAD8B;AAE/CC,IAAAA,SAAS,GAAG,EAFmC;AAG/CC,IAAAA,aAAa,GAAG,EAH+B;AAI/CC,IAAAA,WAAW,GAAG;AAJiC,GAMvB;AAExB,sBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,EAAC,GAAGC,MAAM,CAACC;AAAX;AAAb,KAEI,CAAAF,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEG,MAAb,KAAuB,CAAvB,IAA4BH,WAAW,CAACI,GAAZ,CAAgB,CAACC,SAAD,EAAYC,GAAZ,KAAoB;AAC9D,wBACI,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,GADP;AAEE,MAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAEF,SADF;AAEL,WAAIP;AAFC;AAFT,oBAOE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE;AACLU,QAAAA,KAAK,EAAEb,KAAK,CAACc,WADR;AAEL,WAAIZ;AAFC;AADT,OAOIE,aAAa,CAACO,GAAD,CAAb,GAAqBP,aAAa,CAACO,GAAD,CAAlC,GAA0C,EAP9C,CAPF,CADJ;AAoBD,GArB2B,CAFhC,CADF;AA4BD,CApCD;;AAsCA,MAAML,MAAM,GAAGT,UAAU,CAACkB,MAAX,CAAkB;AAC/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,aAAa,EAAE;AADN;AADoB,CAAlB,CAAf;AAMA,eAAef,SAAf","sourcesContent":["import React from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  StyleProp,\n  ViewStyle,\n  TextStyle\n} from 'react-native';\nimport * as THEME from './Theme';\n\nexport interface TableHeadInterface {\n  titleTextStyle?: StyleProp<TextStyle>;\n  itemStyle?: StyleProp<ViewStyle>;\n  dataTitleHead?: Array<string>;\n  dataSpacing?: Array<string>;\n}\n\nconst TableHead: React.FC<TableHeadInterface> = ({\n  titleTextStyle = {},\n  itemStyle = {},\n  dataTitleHead = [],\n  dataSpacing = [],\n  \n}: TableHeadInterface) => {\n\n  return (\n    <View style={{...styles.container}}>\n      {\n        dataSpacing?.length != 0 && dataSpacing.map((itemWidth, idx) => {\n          return (\n              <View\n                key={idx}\n                style={{\n                  width: itemWidth,\n                  ...(itemStyle as object),\n                }}\n              >\n                <Text\n                  style={{\n                    color: THEME.WHITE_COLOR,\n                    ...(titleTextStyle as object),\n                  }}\n                >\n                  {\n                    dataTitleHead[idx] ? dataTitleHead[idx] : ''\n                  }\n                </Text>\n              </View>\n          )\n        })\n      }\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n  },\n});\n\nexport default TableHead;"]}