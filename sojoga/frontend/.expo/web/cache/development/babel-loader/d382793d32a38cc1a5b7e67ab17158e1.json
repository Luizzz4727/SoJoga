{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from \"axios\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useEffect } from 'react';\nvar api = axios.create({\n  baseURL: \"http://192.168.15.4:8000/api\",\n  headers: {\n    'Content-Type': 'application/json',\n    Accept: 'application/json'\n  }\n});\ngetMyStringValue = function () {\n  var _ref = _asyncToGenerator(function* () {\n    try {\n      return yield AsyncStorage.getItem('@token');\n    } catch (e) {}\n  });\n  return function getMyStringValue() {\n    return _ref.apply(this, arguments);\n  };\n}();\napi.interceptors.request.use(function () {\n  var _ref2 = _asyncToGenerator(function* (config) {\n    var token = getMyStringValue;\n    console.error(token);\n    if (token) {\n      api.defaults.headers.authorization = \"Bearer \" + token;\n    }\n    return config;\n  });\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nexport default api;","map":{"version":3,"names":["axios","AsyncStorage","useEffect","api","create","baseURL","headers","Accept","getMyStringValue","getItem","e","interceptors","request","use","config","token","console","error","defaults","authorization"],"sources":["/app/src/services/api.jsx"],"sourcesContent":["import axios from \"axios\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {useEffect} from 'react';\n\nconst api = axios.create({\n  baseURL: \"http://192.168.15.4:8000/api\",\n  headers: {\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n  },\n});\n\n// const token = await AsyncStorage.getItem('@token')\n\n// const getData = async () => {\n//   try {\n//     const token = await AsyncStorage.getItem('@token')\n//     console.error(token)\n//   } catch(e) {\n//     // error reading value\n//   }\n// }\n\n// console.error(getData)\n\ngetMyStringValue = async () => {\n  try {\n    return await AsyncStorage.getItem('@token')\n  } catch(e) {\n    // read error\n  }\n\n}\n\napi.interceptors.request.use(async config => {\n  // Declaramos um token manualmente para teste.\n  const token = getMyStringValue;\n\n  console.error(token)\n\n  if (token) {\n    api.defaults.headers.authorization = `Bearer ${token}`;\n  }\n\n  return config;\n});\n\n\n\n\nexport default api;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,2CAA2C;AACpE,SAAQC,SAAS,QAAO,OAAO;AAE/B,IAAMC,GAAG,GAAGH,KAAK,CAACI,MAAM,CAAC;EACvBC,OAAO,EAAE,8BAA8B;EACvCC,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClCC,MAAM,EAAE;EACV;AACF,CAAC,CAAC;AAeFC,gBAAgB;EAAA,6BAAG,aAAY;IAC7B,IAAI;MACF,aAAaP,YAAY,CAACQ,OAAO,CAAC,QAAQ,CAAC;IAC7C,CAAC,CAAC,OAAMC,CAAC,EAAE,CAEX;EAEF,CAAC;EAAA;IAAA;EAAA;AAAA;AAEDP,GAAG,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG;EAAA,8BAAC,WAAMC,MAAM,EAAI;IAE3C,IAAMC,KAAK,GAAGP,gBAAgB;IAE9BQ,OAAO,CAACC,KAAK,CAACF,KAAK,CAAC;IAEpB,IAAIA,KAAK,EAAE;MACTZ,GAAG,CAACe,QAAQ,CAACZ,OAAO,CAACa,aAAa,eAAaJ,KAAO;IACxD;IAEA,OAAOD,MAAM;EACf,CAAC;EAAA;IAAA;EAAA;AAAA,IAAC;AAKF,eAAeX,GAAG"},"metadata":{},"sourceType":"module"}