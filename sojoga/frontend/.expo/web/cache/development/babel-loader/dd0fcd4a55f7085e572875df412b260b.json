{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nvar TableBody = function TableBody(_ref) {\n  var children = _ref.children,\n    _ref$isScroll = _ref.isScroll,\n    isScroll = _ref$isScroll === void 0 ? false : _ref$isScroll,\n    onRefreshTable = _ref.onRefreshTable,\n    _ref$bodyHeight = _ref.bodyHeight,\n    bodyHeight = _ref$bodyHeight === void 0 ? 300 : _ref$bodyHeight,\n    _ref$bodyStyle = _ref.bodyStyle,\n    bodyStyle = _ref$bodyStyle === void 0 ? {} : _ref$bodyStyle;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 1),\n    refreshing = _useState2[0];\n  if (isScroll) {\n    return React.createElement(View, {\n      style: {\n        height: bodyHeight\n      }\n    }, React.createElement(ScrollView, {\n      contentContainerStyle: bodyStyle,\n      refreshControl: React.createElement(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefreshTable\n      })\n    }, children));\n  }\n  return React.createElement(View, {\n    style: _objectSpread(_objectSpread({\n      height: bodyHeight\n    }, bodyStyle), {}, {\n      overflow: 'hidden'\n    })\n  }, children);\n};\nexport default TableBody;","map":{"version":3,"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAAA;AAAA;AAAA;AAiBA,IAAMC,SAAuC,GAAG,SAA1CA,SAAuC,CAAGC,MAOtB;EAAA,IANxBC,QAD+C,GAOvBD,KANxBC,QAD+C;IAAA,gBAOvBD,KALxBE,QAAQ;IAARA,QAAQ,8BAAG,KAFoC;IAG/CC,cAH+C,GAOvBH,KAJxBG,cAH+C;IAAA,kBAOvBH,KAHxBI,UAAU;IAAVA,UAAU,gCAAG,GAJkC;IAAA,iBAOvBJ,KAFxBK,SAAS;IAATA,SAAS,+BAAG;EAIZ,gBAAqBP,QAAQ,CAAC,KAAD,CAA7B;IAAA;IAAOQ,UAAD;EACN,IAAIJ,QAAJ,EAAc;IACZ,OACEL,oBAACU,IAAD;MAAMC,KAAK,EAAE;QAACC,MAAM,EAAEL;MAAT;IAAb,GACEP,oBAACa,UAAD;MACEC,qBAAqB,EAAEN,SADzB;MAEEO,cAAc,EACZf,oBAACgB,cAAD;QACEP,UAAU,EAAEA,UADd;QAEEQ,SAAS,EAAEX;MAFb;IAHJ,GASCF,QATD,CADF,CADF;EAeD;EACD,OACEJ,oBAACU,IAAD;IAAMC,KAAK;MAAGC,MAAM,EAAEL;IAAT,GAAyBC,SAAzB;MAA+CU,QAAQ,EAAE;IAAA;EAAtE,GACGd,QADH,CADF;AAKD,CAhCD;AAkCA,eAAeF,SAAf","names":["React","useState","TableBody","_ref","children","isScroll","onRefreshTable","bodyHeight","bodyStyle","refreshing","View","style","height","ScrollView","contentContainerStyle","refreshControl","RefreshControl","onRefresh","overflow"],"sources":["TableBody.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  ScrollView,\n  View,\n  StyleProp,\n  ViewStyle,\n  RefreshControl,\n} from 'react-native';\n\nexport interface TableBodyInterface {\n  children: JSX.Element[] | JSX.Element;\n  isScroll?: boolean;\n  onRefreshTable?: () => void | false;\n  bodyHeight?: number;\n  bodyStyle?: StyleProp<ViewStyle>;\n}\n\nconst TableBody: React.FC<TableBodyInterface> = ({\n  children,\n  isScroll = false,\n  onRefreshTable,\n  bodyHeight = 300,\n  bodyStyle = {}\n  \n}: TableBodyInterface) => {\n\n  const [refreshing] = useState(false)\n  if (isScroll) {\n    return (\n      <View style={{height: bodyHeight,}}>\n        <ScrollView\n          contentContainerStyle={bodyStyle}\n          refreshControl={\n            <RefreshControl\n              refreshing={refreshing}\n              onRefresh={onRefreshTable}\n            />\n          }\n        >\n        {children}\n        </ScrollView>\n      </View>\n    );\n  }\n  return (\n    <View style={{height: bodyHeight, ...(bodyStyle as object), overflow: 'hidden'}}>\n      {children}\n    </View>\n  );\n};\n\nexport default TableBody;"]},"metadata":{},"sourceType":"module"}