{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport api from \"../../services/api\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function TesteAPI() {\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setUser = _useState2[1];\n  var navigation = useNavigation();\n  useEffect(function () {\n    api.get(\"/\").then(function (response) {\n      return setUser(response.data);\n    }).catch(function (err) {\n      console.error(\"ops! ocorreu um erro\" + err);\n    });\n  }, []);\n  return _jsx(View, {\n    children: _jsxs(Text, {\n      children: [\"Usu\\xE1rio: \", user == null ? void 0 : user.status]\n    })\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","api","useNavigation","TesteAPI","user","setUser","navigation","get","then","response","data","catch","err","console","error","status"],"sources":["/app/src/pages/TesteAPI/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {View, Image, ImageBackground, StyleSheet, Text, TextInput, Alert} from 'react-native'; \nimport api from \"../../services/api\";\nimport {useNavigation} from '@react-navigation/native'; \n\nexport default function TesteAPI() {\n  const [user, setUser] = useState();\n\n  const navigation = useNavigation(); \n\n  useEffect(() => {\n    api\n      .get(\"/\")\n      .then((response) => setUser(response.data))\n      .catch((err) => {\n        console.error(\"ops! ocorreu um erro\" + err);\n      });\n  }, []);\n\n  return (\n    <View>\n      <Text>Usu√°rio: {user?.status}</Text>\n    </View>\n  );\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEnD,OAAOC,GAAG;AACV,SAAQC,aAAa,QAAO,0BAA0B;AAAC;AAAA;AAEvD,eAAe,SAASC,QAAQ,GAAG;EACjC,gBAAwBH,QAAQ,EAAE;IAAA;IAA3BI,IAAI;IAAEC,OAAO;EAEpB,IAAMC,UAAU,GAAGJ,aAAa,EAAE;EAElCH,SAAS,CAAC,YAAM;IACdE,GAAG,CACAM,GAAG,CAAC,GAAG,CAAC,CACRC,IAAI,CAAC,UAACC,QAAQ;MAAA,OAAKJ,OAAO,CAACI,QAAQ,CAACC,IAAI,CAAC;IAAA,EAAC,CAC1CC,KAAK,CAAC,UAACC,GAAG,EAAK;MACdC,OAAO,CAACC,KAAK,CAAC,sBAAsB,GAAGF,GAAG,CAAC;IAC7C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,OACE,KAAC,IAAI;IAAA,UACH,MAAC,IAAI;MAAA,2BAAWR,IAAI,oBAAJA,IAAI,CAAEW,MAAM;IAAA;EAAQ,EAC/B;AAEX"},"metadata":{},"sourceType":"module"}