{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport * as THEME from \"./Theme\";\nvar TableRow = function TableRow(_ref) {\n  var _ref$width = _ref.width,\n    width = _ref$width === void 0 ? '100%' : _ref$width,\n    onHandleItemRow = _ref.onHandleItemRow,\n    _ref$textStyle = _ref.textStyle,\n    textStyle = _ref$textStyle === void 0 ? {} : _ref$textStyle,\n    _ref$itemStyle = _ref.itemStyle,\n    itemStyle = _ref$itemStyle === void 0 ? {} : _ref$itemStyle,\n    _ref$dataRow = _ref.dataRow,\n    dataRow = _ref$dataRow === void 0 ? [] : _ref$dataRow,\n    _ref$dataSpacing = _ref.dataSpacing,\n    dataSpacing = _ref$dataSpacing === void 0 ? [] : _ref$dataSpacing;\n  return React.createElement(TouchableOpacity, {\n    activeOpacity: 1,\n    onPress: onHandleItemRow,\n    style: _objectSpread(_objectSpread({}, styles.container), {}, {\n      width: width\n    })\n  }, (dataSpacing === null || dataSpacing === void 0 ? void 0 : dataSpacing.length) != 0 && dataSpacing.map(function (itemWidth, idx) {\n    return React.createElement(View, {\n      key: idx,\n      style: _objectSpread({\n        width: itemWidth\n      }, itemStyle)\n    }, React.createElement(Text, {\n      style: _objectSpread({\n        color: THEME.WHITE_COLOR\n      }, textStyle)\n    }, dataRow[idx] ? dataRow[idx] : ''));\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  }\n});\nexport default TableRow;","map":{"version":3,"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAAA;AAAA;AAAA;AAAA;AAWA,OAAO,KAAKC,KAAZ;AAWA,IAAMC,QAAqC,GAAG,SAAxCA,QAAqC,CAAGC,MAQrB;EAAA,sBAPvBC,KAAK;IAALA,KAAK,2BAAG,MADqC;IAE7CC,eAF6C,GAQtBF,KANvBE,eAF6C;IAAA,iBAQtBF,KALvBG,SAAS;IAATA,SAAS,+BAAG,EAHiC;IAAA,iBAQtBH,KAJvBI,SAAS;IAATA,SAAS,+BAAG,EAJiC;IAAA,eAQtBJ,KAHvBK,OAAO;IAAPA,OAAO,6BAAG,EALmC;IAAA,mBAQtBL,KAFvBM,WAAW;IAAXA,WAAW,iCAAG;EAId,OACET,oBAACU,gBAAD;IACEC,aAAa,EAAE,CADjB;IAEEC,OAAO,EAAEP,eAFX;IAGEQ,KAAK,kCAAMC,MAAM,CAACC,SAAX;MAAsBX,KAAK,EAAEA;IAAAA;EAHtC,GAMI,YAAW,SAAX,eAAW,WAAX,uBAAW,CAAEY,MAAb,KAAuB,CAAvB,IAA4BP,WAAW,CAACQ,GAAZ,CAAgB,UAACC,SAAD,EAAYC,GAAZ,EAAoB;IAC9D,OACInB,oBAACoB,IAAD;MACEC,GAAG,EAAEF,GADP;MAEEN,KAAK;QACHT,KAAK,EAAEc;MADF,GAEDX;IAJR,GAOEP,oBAACsB,IAAD;MACET,KAAK;QACHU,KAAK,EAAEtB,KAAK,CAACuB;MADR,GAEDlB;IAHR,GAQIE,OAAO,CAACW,GAAD,CAAP,GAAeX,OAAO,CAACW,GAAD,CAAtB,GAA8B,EARlC,CAPF,CADJ;EAqBD,CAtB2B,CANhC,CADF;AAiCD,CA3CD;AA6CA,IAAML,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;EAC/BX,SAAS,EAAE;IACTY,aAAa,EAAE,KADN;IAETC,QAAQ,EAAE;EAFD;AADoB,CAAlB,CAAf;AAOA,eAAe1B,QAAf","names":["React","THEME","TableRow","_ref","width","onHandleItemRow","textStyle","itemStyle","dataRow","dataSpacing","TouchableOpacity","activeOpacity","onPress","style","styles","container","length","map","itemWidth","idx","View","key","Text","color","WHITE_COLOR","StyleSheet","create","flexDirection","flexWrap"],"sources":["TableRow.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  StyleSheet,\n  View,\n  TouchableOpacity,\n  Text,\n  StyleProp,\n  ViewStyle,\n  TextStyle\n} from 'react-native';\n\nimport * as THEME from './Theme';\n\nexport interface TableRowInterface {\n  width?: string;\n  onHandleItemRow?: () => void | false;\n  textStyle?: StyleProp<TextStyle>;\n  itemStyle?: StyleProp<ViewStyle>;\n  dataRow?: Array<any>;\n  dataSpacing?: Array<string>;\n}\n\nconst TableRow: React.FC<TableRowInterface> = ({\n  width = '100%',\n  onHandleItemRow,\n  textStyle = {},\n  itemStyle = {},\n  dataRow = [],\n  dataSpacing = [],\n  \n}: TableRowInterface) => {\n\n  return (\n    <TouchableOpacity \n      activeOpacity={1}\n      onPress={onHandleItemRow}\n      style={{...styles.container, width: width,}}\n    >\n      {\n        dataSpacing?.length != 0 && dataSpacing.map((itemWidth, idx) => {\n          return (\n              <View\n                key={idx}\n                style={{\n                  width: itemWidth,\n                  ...(itemStyle as object),\n                }}\n              >\n                <Text\n                  style={{\n                    color: THEME.WHITE_COLOR,\n                    ...(textStyle as object),\n                  }}\n                >\n                  {\n                    // _.get(dataRow[idx], [keyDataRow]) ?  _.get(dataRow[idx], [keyDataRow]) : ''\n                    dataRow[idx] ? dataRow[idx] : ''\n                  }\n                </Text>\n              </View>\n          )\n        })\n      }\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n});\n\nexport default TableRow;"]},"metadata":{},"sourceType":"module"}